<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <properties>
    <bundle.symbolicName>service</bundle.symbolicName>
    <bundle.namespace>pl.edu.agh.iosr.realestatebroker</bundle.namespace>
  </properties>

  <parent>
      <groupId>pl.edu.agh.iosr</groupId>
      <artifactId>realestatebroker</artifactId>
      <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>pl.edu.agh.iosr</groupId>
  <artifactId>realestatebroker.service</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>${bundle.symbolicName} [${bundle.namespace}]</name>

  <packaging>bundle</packaging>

  <dependencies>
    <!--
     | uncomment to add all imported (non-local) bundles to your compilation classpath
    <dependency>
      <type>pom</type>
      <groupId>${parent.groupId}</groupId>
      <artifactId>provision</artifactId>
      <optional>true</optional>
    </dependency>
    -->
    <dependency>
        <groupId>pl.edu.agh.iosr</groupId>
        <artifactId>realestatebroker.model</artifactId>
        <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
        <groupId>pl.edu.agh.iosr</groupId>
        <artifactId>realestatebroker.persistence</artifactId>
        <version>1.0-SNAPSHOT</version>
    </dependency>

      <!--  test -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>1.5.8</version>
          <scope>test</scope>
      </dependency>
      <!--
      <dependency>
        <groupId>javassist</groupId>
        <artifactId>javassist</artifactId>
          <version>3.9.0.GA</version>
        <scope>test</scope>
      </dependency>
      -->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>1.5.8</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${spring-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.springframework.osgi</groupId>
          <artifactId>spring-osgi-core</artifactId>
          <version>${spring-osgi-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.apache.felix</groupId>
          <artifactId>org.apache.felix.framework</artifactId>
          <version>${felix-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>${hibernate-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
          <version>${asm-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>javax.transaction</groupId>
          <artifactId>jta</artifactId>
          <version>${jta-version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>${commons-dbcp-version}</version>
          <scope>test</scope>
      </dependency>
    <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>9.3-1103-jdbc41</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
              <source>1.7</source>
              <target>1.7</target>
          </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <version>1.4.3</version>
        <!--
         | the following instructions build a simple set of public/private classes into an OSGi bundle
        -->
        <configuration>
          <manifestLocation>META-INF</manifestLocation>
          <instructions>
            <Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
            <Bundle-Version>${pom.version}</Bundle-Version>

            <Import-Package>
                javax.xml.bind,
                javax.jws,
                javax.jws.soap,
                javax.transaction,
                javax.xml.bind.annotation,
                javax.xml.namespace,
                javax.xml.ws,
                org.aopalliance.aop,
                pl.edu.agh.iosr.realestatebroker.dao,
                org.springframework.aop,
                org.springframework.aop.framework,
                org.springframework.transaction,
                org.springframework.transaction.interceptor,
                *
              </Import-Package>
              <Private-Package>
                  pl.edu.agh.iosr.realestatebroker.service.impl
              </Private-Package>
              <Export-Package>
                  '=META-INF.wsdl',
                  pl.edu.agh.iosr.realestatebroker.service;version="${pom.version}"
              </Export-Package>
              <_failok>true</_failok>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>